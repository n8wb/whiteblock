
rnode {

  server {
    # host name or IP address of this node
    # If this attribute is not set then the node will try to guess its IP address
    host = 0.0.0.0

    # dynamic host IP address (changes periodically)
    host-dynamic = false

    # use UpNp to open ports on gateway router
    upnp = true

    # network port for node to node communication
    port = 40400

    # network port for HTTP services
    port-http = 40403

    # Kademlia port for node to node (P2P) communication
    port-kademlia = 40404

    # Default time out for sending messages
    send-timeout = 2 seconds

    # Start a stand-alone node (no bootstrapping)
    standalone = {{{standalone}}}

    # Bootstrap rnode address for initial seed
    {{{bootstrap}}}


    # Path to data directory
    # data-dir = ${user.home}/.rnode

    # Type of RSpace backing store
    store-type = lmdb

    # Casper block store map size (in bytes)
    store-size = 1G

    # Map size (in bytes)
    map-size = 1G

    # Maximum number of peers allowed to connect to the node
    max-connections = 500

    # Maximum size of message that can be sent via transport layer
    max-message-size = 256K

    # TLS certificate settings
    tls {
      # certificate = ${data-dir}"/node.certificate.pem"
      # key = ${data-dir}/node.key.pem
      secure-random-non-blocking = false
    }

    metrics {
      prometheus = false
      influxdb = true
      zipkin = false
      sigar = false
    }
  }

  # gRPC API settings
  grpc {
    # Hostname or IP of node on which gRPC service is running
    host = 0.0.0.0

    # Port used for external gRPC API
    port-external = 40401

    # Port used for external gRPC API
    port-internal = 40402
  }

  # Casper configuration
  casper {
    # Base16 encoding of the public key to use for signing a proposed blocks
    # Can be inferred from the private key for some signature algorithms
    # validator-public-key =

    # Base16 encoding of the private key to use for signing a proposed blocks
    # validator-private-key =

    # Path to the base16 encoded private key to use for signing a proposed blocks
    # validator-private-key-path =

    # Name of the algorithm to use for signing proposed blocks
    sig-algorithm = ed25519

    # Plain text file consisting of lines of the form '<pk> <stake>',
    # which defines the bond amounts for each validator at genesis.
    # <pk> is the public key (in base-16 encoding) identifying the validator and <stake>
    # is the amount of Rev they have bonded (an integer).
    # Note: this overrides the 'num-validators' option.
    # bonds-file = "/bonds.txt"

    # Plain text file listing the public keys of validators known to the user (one per line).
    # Signatures from these validators are required in order to accept a block which starts the local
    # node's view of the blockDAG.
    # known-validators-file =

    # Number of validators at genesis
    validators = {{{validatorCount}}}

    # Plain text file consisting of lines of the form '<algorithm> <pk> <revBalance>',
    # which defines the Rev wallets that exist at genesis.
    # "<algorithm> is the algorithm used to verify signatures when using the wallet (one of ed25519 or secp256k1),
    # "<pk> is the public key (in base-16 encoding) identifying the wallet and <revBalance>
    # is the amount of Rev in the wallet.
    # wallets-file =

    # Minimum bond accepted by the PoS contract in the genesis block
    bond-minimum = 1

    # Maximum bond accepted by the PoS contract in the genesis block
    bond-maximum = 9223372036854775807

    # True if there should be a public access Rev faucet in the genesis block
    has-faucet = false

    # Number of signatures from trusted validators required to creating an approved genesis block
    required-signatures = 0

    # Identifier of the shard this node is connected to
    shard = rchain

    # Start a node as a genesis validator
    genesis-validator = false

    # Interval at which condition for creating ApprovedBlock will be checked
    genesis-approve-interval = 5 seconds

    # Time window in which BlockApproval messages will be accumulated before checking conditions
    genesis-approve-duration = 5 minutes

    # Genesis data folder
    # genesis-path = ${data-dir}/genesis

    # Timestamp for the deploys
    # deploy-timestamp = 0
  }
}

kamon.influxdb {
    hostname = {{{influxIp}}}
    port = 8086
    database = "rnode"
    protocol = "http"
}
